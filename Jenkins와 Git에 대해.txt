Jenkins는 형상관리를 위한 CI,CD 대표 소프트웨어이다. Continuous Intergration, Continuous Deployment는 지속적인 통합, 지속적인 배포로서 작업중인 프로젝트에 대해 개발자들이 일일이 관리하고 배포하지 않게끔 지원한다.

실상 개발자들이 많이 쓰는 방식은 배포부분이라고 한다. 본래 과정은 Git을 기준으로 할 시,
Git Clone -> 코드 수정 -> 저장 후 Git Push -> 빌드 및 테스트 -> 배포 의 과정을 거친다.(확실하지 않음)

그러나 Jenkins를 사용하면 대부분의 과정들이 Pipeline이라는 Jenkins의 대표 기능을 통해 축약될 수 있다.
Git Clone -> 코드수정 -> 저장 후 Git Push -> Jenkins Pipeline을 통해 빌드 및 테스트/ 배포(개발자의 공수가 필요하지 않음)

물론 Pipeline을 빌드하는데에 알아야 할 지식이 있어 진입장벽이 있다. 하지만 형상관리를 목적으로 사용하는 Jenkins는 Pipeline 없이도 쉽게 사용 가능하다.

필요한 것은 Github 계정, Git Repository, Github Token(계정 토큰), Github Pull Request시 Jenkins로 자동 빌드 요청이 될수있게끔 필요한 Webhook(외부ip 또는 ip에 대한 방화벽 해제가 필요한데, ngrok을 쓰면 됨), 그리고 Jenkins정도가 있다.